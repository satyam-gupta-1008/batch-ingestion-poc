{"timestamp":"2025-09-04T11:40:32.476558","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-04T11:40:32.477414","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dynamic-airbyte-with-airflow.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-04T11:40:33.443226","level":"info","event":"Trying to parse the dbt project using dbt ls cache cosmos_cache__airbyte_dynamic_connection__my_project_dbt_group_11...","logger":"cosmos.dbt.graph"}
{"timestamp":"2025-09-04T11:40:33.513813","level":"info","event":"Cosmos performance: time to calculate cache identifier cosmos_cache__airbyte_dynamic_connection__my_project_dbt_group_11 for current version: 0.05899300001328811","logger":"cosmos.cache"}
{"timestamp":"2025-09-04T11:40:33.514103","level":"info","event":"Cosmos performance: Cache miss for cosmos_cache__airbyte_dynamic_connection__my_project_dbt_group_11 - skipped","logger":"cosmos.dbt.graph"}
{"timestamp":"2025-09-04T11:40:33.514630","level":"info","event":"Trying to parse the dbt project in `/opt/airflow/dbt/my_project_dbt` using dbt ls...","logger":"cosmos.dbt.graph"}
{"timestamp":"2025-09-04T11:40:33.521584","level":"info","event":"Partial parse is enabled and the latest partial parse file is /tmp/cosmos/airbyte_dynamic_connection__my_project_dbt_group_11/target/partial_parse.msgpack","logger":"cosmos.dbt.graph"}
{"timestamp":"2025-09-04T11:40:33.527760","level":"info","event":"Profile caching is enable.","logger":"cosmos.config"}
{"timestamp":"2025-09-04T11:40:33.528716","level":"info","event":"Using mock values for profile dbt_postgres_profile","logger":"cosmos.profiles.base"}
{"timestamp":"2025-09-04T11:40:33.529325","level":"info","event":"Profile not found in cache storing and using profile: /tmp/cosmos/profile/c53aac30b07ef8302d73bee450fe030c63c528d0f8252e87331b87e1cc71bcc9/profiles.yml.","logger":"cosmos.config"}
{"timestamp":"2025-09-04T11:40:33.529651","level":"info","event":"Project /opt/airflow/dbt/my_project_dbt does not have {'dependencies.yml', 'packages.yml'}","logger":"cosmos.dbt.project"}
{"timestamp":"2025-09-04T11:40:34.879323","level":"info","event":"Running command with dbt Runner: `/home/airflow/.local/bin/dbt ls --output json --output-keys name unique_id resource_type depends_on original_file_path tags config freshness --project-dir /tmp/tmpu4rbxwqw --profiles-dir /tmp/cosmos/profile/c53aac30b07ef8302d73bee450fe030c63c528d0f8252e87331b87e1cc71bcc9 --profile dbt_postgres_profile --target dev`","logger":"cosmos.dbt.graph"}
{"timestamp":"2025-09-04T11:40:34.882973","level":"info","event":"Trying to run dbtRunner with:\n ['ls', '--output', 'json', '--output-keys', 'name', 'unique_id', 'resource_type', 'depends_on', 'original_file_path', 'tags', 'config', 'freshness', '--project-dir', '/tmp/tmpu4rbxwqw', '--profiles-dir', '/tmp/cosmos/profile/c53aac30b07ef8302d73bee450fe030c63c528d0f8252e87331b87e1cc71bcc9', '--profile', 'dbt_postgres_profile', '--target', 'dev']\n in /tmp/tmpu4rbxwqw","logger":"cosmos.dbt.runner"}
{"timestamp":"2025-09-04T11:40:34.966476Z","level":"info","event":"\u001b[0m11:40:34  Running with dbt=1.8.2","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:40:35.342536Z","level":"info","event":"\u001b[0m11:40:35  Registered adapter: postgres=1.8.2","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.237000","level":"error","event":"Process timed out, PID: 2076","logger":"airflow.utils.timeout.TimeoutPosix"}
{"timestamp":"2025-09-04T11:41:10.651828Z","level":"info","event":"\u001b[0m11:41:10  Encountered an error:","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.653838Z","level":"info","event":"DagBag import timeout for /opt/airflow/dags/dynamic-airbyte-with-airflow.py after 30.0s.","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.654583Z","level":"info","event":"Please take a look at these docs to improve your DAG import time:","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.655056Z","level":"info","event":"* https://airflow.apache.org/docs/apache-airflow/3.0.5/best-practices.html#top-level-python-code","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.655681Z","level":"info","event":"* https://airflow.apache.org/docs/apache-airflow/3.0.5/best-practices.html#reducing-dag-complexity, PID: 2076","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.656091Z","level":"info","event":"\u001b[0m11:41:10  Traceback (most recent call last):","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.656273Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/dbt/cli/requires.py\", line 138, in wrapper","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.656668Z","level":"info","event":"    result, success = func(*args, **kwargs)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.657614Z","level":"info","event":"                      ^^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.663906Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/dbt/cli/requires.py\", line 101, in wrapper","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.664380Z","level":"info","event":"    return func(*args, **kwargs)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.664789Z","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.665058Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/dbt/cli/requires.py\", line 218, in wrapper","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.667889Z","level":"info","event":"    return func(*args, **kwargs)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.668527Z","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.677273Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/dbt/cli/requires.py\", line 247, in wrapper","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.678169Z","level":"info","event":"    return func(*args, **kwargs)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.679155Z","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.679893Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/dbt/cli/requires.py\", line 294, in wrapper","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.681213Z","level":"info","event":"    return func(*args, **kwargs)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.682033Z","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.683009Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/dbt/cli/requires.py\", line 320, in wrapper","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.683477Z","level":"info","event":"    ctx.obj[\"manifest\"] = parse_manifest(","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.684079Z","level":"info","event":"                          ^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.686130Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/dbt/parser/manifest.py\", line 1895, in parse_manifest","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.689043Z","level":"info","event":"    register_adapter(runtime_config, get_mp_context())","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.693118Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/dbt/adapters/factory.py\", line 203, in register_adapter","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.701914Z","level":"info","event":"    FACTORY.register_adapter(config, mp_context, adapter_registered_log_level)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.708044Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/dbt/adapters/factory.py\", line 118, in register_adapter","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.710924Z","level":"info","event":"    adapter: Adapter = adapter_type(config, mp_context)  # type: ignore","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.715104Z","level":"info","event":"                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.716641Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/dbt/adapters/base/impl.py\", line 283, in __init__","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.719643Z","level":"info","event":"    self.behavior = DEFAULT_BASE_BEHAVIOR_FLAGS  # type: ignore","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.722536Z","level":"info","event":"    ^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.723589Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/dbt/adapters/base/impl.py\", line 317, in behavior","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.727237Z","level":"info","event":"    self._behavior = Behavior(flags, user_overrides)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.729344Z","level":"info","event":"                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.730968Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/dbt_common/behavior_flags.py\", line 136, in __init__","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.732021Z","level":"info","event":"    self._flags = [BehaviorFlagRendered(flag, user_overrides) for flag in flags]","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.734487Z","level":"info","event":"                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.735572Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/dbt_common/behavior_flags.py\", line 63, in __init__","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.736994Z","level":"info","event":"    flag_source=flag.get(\"source\", self._default_source()),","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.739203Z","level":"info","event":"                                   ^^^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.744221Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/dbt_common/behavior_flags.py\", line 96, in _default_source","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.745695Z","level":"info","event":"    for frame in inspect.stack():","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.748171Z","level":"info","event":"                 ^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.749317Z","level":"info","event":"  File \"/usr/local/lib/python3.12/inspect.py\", line 1781, in stack","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.754460Z","level":"info","event":"    return getouterframes(sys._getframe(1), context)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.756935Z","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.760435Z","level":"info","event":"  File \"/usr/local/lib/python3.12/inspect.py\", line 1756, in getouterframes","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.761439Z","level":"info","event":"    traceback_info = getframeinfo(frame, context)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.763028Z","level":"info","event":"                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.764571Z","level":"info","event":"  File \"/usr/local/lib/python3.12/inspect.py\", line 1718, in getframeinfo","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.769373Z","level":"info","event":"    lines, lnum = findsource(frame)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.770578Z","level":"info","event":"                  ^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.771637Z","level":"info","event":"  File \"/usr/local/lib/python3.12/inspect.py\", line 1090, in findsource","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.771785Z","level":"info","event":"    module = getmodule(object, file)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.771903Z","level":"info","event":"             ^^^^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.773138Z","level":"info","event":"  File \"/usr/local/lib/python3.12/inspect.py\", line 1013, in getmodule","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.774277Z","level":"info","event":"    f = getabsfile(module)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.779300Z","level":"info","event":"        ^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.780744Z","level":"info","event":"  File \"/usr/local/lib/python3.12/inspect.py\", line 982, in getabsfile","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.782989Z","level":"info","event":"    _filename = getsourcefile(object) or getfile(object)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.784951Z","level":"info","event":"                ^^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.882844Z","level":"info","event":"  File \"/usr/local/lib/python3.12/inspect.py\", line 958, in getsourcefile","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.883173Z","level":"info","event":"    if any(filename.endswith(s) for s in all_bytecode_suffixes):","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.883533Z","level":"info","event":"       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.884013Z","level":"info","event":"  File \"/usr/local/lib/python3.12/inspect.py\", line 958, in <genexpr>","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.884476Z","level":"info","event":"    if any(filename.endswith(s) for s in all_bytecode_suffixes):","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.887287Z","level":"info","event":"           ^^^^^^^^^^^^^^^^^^^^","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.889274Z","level":"info","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/timeout.py\", line 69, in handle_timeout","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.889459Z","level":"info","event":"    raise AirflowTaskTimeout(self.error_message)","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.890341Z","level":"info","event":"airflow.exceptions.AirflowTaskTimeout: DagBag import timeout for /opt/airflow/dags/dynamic-airbyte-with-airflow.py after 30.0s.","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.890909Z","level":"info","event":"Please take a look at these docs to improve your DAG import time:","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.891712Z","level":"info","event":"* https://airflow.apache.org/docs/apache-airflow/3.0.5/best-practices.html#top-level-python-code","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.892324Z","level":"info","event":"* https://airflow.apache.org/docs/apache-airflow/3.0.5/best-practices.html#reducing-dag-complexity, PID: 2076","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:10.894388Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-04T11:41:11.779560","level":"error","event":"Failed to import: /opt/airflow/dags/dynamic-airbyte-with-airflow.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"CosmosLoadDbtException","exc_value":"Unable to run ['/home/airflow/.local/bin/dbt', 'ls', '--output', 'json', '--output-keys', 'name', 'unique_id', 'resource_type', 'depends_on', 'original_file_path', 'tags', 'config', 'freshness', '--project-dir', '/tmp/tmpu4rbxwqw', '--profiles-dir', '/tmp/cosmos/profile/c53aac30b07ef8302d73bee450fe030c63c528d0f8252e87331b87e1cc71bcc9', '--profile', 'dbt_postgres_profile', '--target', 'dev'] due to the error:\nstderr: DagBag import timeout for /opt/airflow/dags/dynamic-airbyte-with-airflow.py after 30.0s.\nPlease take a look at these docs to improve your DAG import time:\n* https://airflow.apache.org/docs/apache-airflow/3.0.5/best-practices.html#top-level-python-code\n* https://airflow.apache.org/docs/apache-airflow/3.0.5/best-practices.html#reducing-dag-complexity, PID: 2076\nstdout: ","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":394,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/dynamic-airbyte-with-airflow.py","lineno":257,"name":"<module>"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/cosmos/airflow/task_group.py","lineno":28,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/cosmos/converter.py","lineno":287,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/cosmos/dbt/graph.py","lineno":552,"name":"load"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/cosmos/dbt/graph.py","lineno":617,"name":"load_via_dbt_ls"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/cosmos/dbt/graph.py","lineno":789,"name":"load_via_dbt_ls_without_cache"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/cosmos/dbt/graph.py","lineno":606,"name":"run_dbt_ls"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/cosmos/dbt/graph.py","lineno":271,"name":"run_command"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/cosmos/dbt/graph.py","lineno":250,"name":"run_command_with_dbt_runner"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-09-04T11:41:11.784344","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/pydantic/main.py:463: UserWarning: Pydantic serializer warnings:\n  PydanticSerializationUnexpectedValue(Expected `str` - serialized value may not be as expected [input_value={'version': 'a1eab71c3375...y_project_dbt_group_11'}, input_type=dict])\n  return self.__pydantic_serializer__.to_python(\n","logger":"py.warnings"}
{"timestamp":"2025-09-04T11:41:11.784749","level":"error","event":"DAG not found during start up","dag_id":"airbyte_dynamic_connection","bundle":"BundleInfo(name='dags-folder', version=None)","path":"dynamic-airbyte-with-airflow.py","logger":"task"}
{"timestamp":"2025-09-04T11:41:11.810330Z","level":"error","event":"/usr/local/lib/python3.12/multiprocessing/resource_tracker.py:279: UserWarning: resource_tracker: There appear to be 1 leaked semaphore objects to clean up at shutdown","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-04T11:41:11.810906Z","level":"error","event":"  warnings.warn('resource_tracker: There appear to be %d '","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-04T11:41:11.811074Z","level":"warning","event":"Process exited abnormally","exit_code":1,"logger":"task"}
